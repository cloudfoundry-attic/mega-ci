groups:
- name: etcd
  jobs:
  - test-etcd
  - clean-deployment
  - create-final-release
  - merge-master-into-develop
  - deploy-and-test-with-cf

resources:
- name: deployments-runtime
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/deployments-runtime.git
- name: runtime-credentials
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/runtime-credentials.git
- name: mega-ci
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/mega-ci.git
- name: etcd-release-develop
  type: git
  source:
    branch: develop
    ignore_paths: [.final_builds, releases]
    fetch: [master]
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/etcd-release.git
- name: etcd-release-merge-target
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/etcd-release.git
- name: etcd-release-master
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/etcd-release.git
- name: cf-release
  type: git
  source:
    branch: release-candidate
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git
- name: cf-deployment
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-deployment.git
- name: etcd-cf-deployment
  type: bosh-deployment
  source:
    target: {{bosh_director}}
    username: {{bosh_username}}
    password: {{bosh_password}}
    deployment: etcd-cf-deployment
    ignore_ssl: true
- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

jobs:
- name: test-etcd
  public: true
  plan:
  - aggregate:
    - get: deployments-runtime
    - get: mega-ci
    - get: etcd-release
      resource: etcd-release-develop
      trigger: true
  - aggregate:
    - task: generate-iaas-settings-etcd
      file: mega-ci/scripts/ci/generate-iaas-settings.yml
      config:
        params:
          DEPLOYMENT_DIR: mega-ci
          DEPLOYMENT: etcd
          SUBNET: EtcdSubnet
          SECURITY_GROUP: EtcdSecurityGroup
          STACK_NAME: concourse
    - task: generate-iaas-settings-turbulence
      file: mega-ci/scripts/ci/generate-iaas-settings.yml
      config:
        params:
          DEPLOYMENT_DIR: mega-ci
          DEPLOYMENT: turbulence
          SUBNET: EtcdSubnet
          SECURITY_GROUP: EtcdSecurityGroup
          STACK_NAME: concourse
  - task: run-eats
    file: mega-ci/scripts/ci/run-eats.yml
    config:
      params:
        CPI_RELEASE_NAME: bosh-warden-cpi
        CPI_RELEASE_URL: http://bosh.io/d/github.com/cppforlife/bosh-warden-cpi-release?v=21
        IAAS_SETTINGS_TURBULENCE: generate-iaas-settings-turbulence/generated-stubs/iaas-settings.yml
        IAAS_SETTINGS_ETCD: generate-iaas-settings-etcd/generated-stubs/iaas-settings.yml
        BOSH_OPERATION_TIMEOUT: 20m

- name: clean-deployment
  public: true
  plan:
  - aggregate:
    - get: deployments-runtime
    - get: mega-ci
    - get: etcd-release-develop
      trigger: true
      passed: [test-etcd]
  - task: clean
    file: mega-ci/scripts/ci/clean-deployment.yml

- name: deploy-and-test-with-cf
  public: true
  plan:
  - aggregate:
    - get: deployments-runtime
    - get: mega-ci
    - get: etcd-release
      resource: etcd-release-develop
      passed: [test-etcd]
      trigger: true
    - get: cf-release
    - get: cf-deployment
    - get: aws-stemcell
  - task: prepare-cf-deployment
    file: mega-ci/scripts/ci/prepare-cf-deployment.yml
    config:
      params:
        STUB_PATH: deployments-runtime/mega-ci/stubs/cf/cf-stub.yml
        STUB_PARTS_PATH: deployments-runtime/mega-ci/generated-stubs/cf
  - put: etcd-cf-deployment
    params:
      manifest: prepare-cf-deployment/cf-deployment/outputs/manifests/cf.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [prepare-cf-deployment/cf-deployment/outputs/releases/*.tgz]

- name: create-final-release
  public: true
  plan:
  - aggregate:
    - get: mega-ci
    - get: runtime-credentials
    - get: release-repo
      resource: etcd-release-develop
      passed: [test-etcd]
      trigger: true
  - task: create-final-release
    file: mega-ci/scripts/ci/create-final-release.yml
    config:
      params:
        RELEASE_NAME: etcd
        PRIVATE_YML_PATH: etcd-release/private.yml
  - put: etcd-release-master
    params:
      repository: create-final-release/release-repo
      tag: create-final-release/release-repo/version_number
  - task: run-cats
    file: mega-ci/scripts/ci/run-bosh-command.yml
    config:
      params:
        ENVIRONMENT: mega-ci
        DEPLOYMENT_NAME: etcd-release-develop
        COMMAND: run errand acceptance_tests
    ensure:
      task: delete-deployment
      file: mega-ci/scripts/ci/run-bosh-command.yml
      config:
        params:
          ENVIRONMENT: mega-ci
          DEPLOYMENT_NAME: etcd-release-develop
          COMMAND: delete deployment etcd-release-develop


- name: merge-master-into-develop
  public: true
  plan:
  - aggregate:
    - get: mega-ci
    - get: etcd-release-master
      trigger: true
    - get: release-repo
      resource: etcd-release-develop
  - task: merge-master-into-develop
    file: mega-ci/scripts/ci/merge-master-into-develop.yml
  - put: etcd-release-merge-target
    params:
      repository: merge-master-into-develop/release-repo
