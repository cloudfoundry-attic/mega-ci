groups:
- name: etcd
  jobs:
  - test-etcd
  # - create-release

resources:
- name: deployments-runtime
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/deployments-runtime.git
- name: mega-ci
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/mega-ci.git
- name: etcd-release
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/etcd-release.git

jobs:
- name: test-etcd
  plan:
  - aggregate:
    - get: deployments-runtime
    - get: mega-ci
  - aggregate:
    - task: generate-iaas-settings-etcd
      file: mega-ci/scripts/ci/generate-iaas-settings.yml
      config:
        params:
          DEPLOYMENT_DIR: mega-ci
          DEPLOYMENT: etcd
          SUBNET: EtcdSubnet
          SECURITY_GROUP: EtcdSecurityGroup
          STACK_NAME: concourse
    - task: generate-iaas-settings-turbulence
      file: mega-ci/scripts/ci/generate-iaas-settings.yml
      config:
        params:
          DEPLOYMENT_DIR: mega-ci
          DEPLOYMENT: turbulence
          SUBNET: EtcdSubnet
          SECURITY_GROUP: EtcdSecurityGroup
          STACK_NAME: concourse

# This is probably unecessary given that ginkgo creates the release
# - name: create-release
#   plan:
#   - aggregate:
#     - get: deployments-runtime
#     - get: mega-ci
#     - get: release
#       resource: etcd-release
#       trigger: true
#   - task: create-release
#     file: mega-ci/scripts/ci/create-release.yml
#     config:
#       params:
#         RELEASE_NAME: etcd
#         RELEASE_DIR: etcd-release
#   - task: test-release
#     file: mega-ci/scripts/ci/test-release.yml
#     config:
#       params:
#         RELEASE_DIR: etcd-release
