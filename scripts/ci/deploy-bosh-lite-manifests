#!/bin/bash -exu

function setup_env() {
  set +x
  export BUILD_DIR="${PWD}"
  export BOSH_LITE_PRIVATE_KEY="${BUILD_DIR}/bosh-lite.pem"
  export BOSH_USER="admin"
  export BOSH_PASSWORD="admin"

  echo "${BOSH_LITE_PRIVATE_KEY_CONTENTS}" > "${BOSH_LITE_PRIVATE_KEY}"
  set -x
}

function deploy_boshlite() {
  pushd "${BUILD_DIR}/bosh-lite" > /dev/null
    vagrant up --provider=aws
    export BOSH_DIRECTOR=$(vagrant ssh-config 2>/dev/null | grep HostName | awk '{print $2}')

    target_director
  popd > /dev/null
}

function target_director() {
  set +e
  local rc
  rc=1

  while [ "${rc}" -ne "0" ]; do
    sleep 10
    curl -k -s "https://${BOSH_DIRECTOR}:25555/info" > /dev/null
    rc=$?
  done
  set -e

  bosh target "${BOSH_DIRECTOR}"
}

function upload_stemcell() {
  bosh upload stemcell "${BUILD_DIR}/bosh-lite-stemcell/stemcell.tgz"
}

function upload_dependencies() {
  for dependency in ${DEPENDENCIES}; do
    bosh -n upload release https://bosh.io/d/github.com/${dependency}
  done
}

function create_and_upload_release() {
  pushd "${BUILD_DIR}/release" > /dev/null
    bosh -n create release --force
    bosh -n upload release
  popd > /dev/null
}

function deploy_manifests() {
  pushd "${BUILD_DIR}/release" > /dev/null
    for manifest in ${MANIFESTS}; do
      sed -i -e "s/BOSH-DIRECTOR-UUID/$(bosh status --uuid)/g" "${manifest}"
      bosh -d "${manifest}" -n deploy
      bosh -n delete deployment $(bosh deployments | grep bosh-warden-boshlite | awk '{print $2}')
    done
  popd > /dev/null
}

function destroy_boshlite() {
  pushd "${BUILD_DIR}/bosh-lite" > /dev/null
    vagrant destroy -f
  popd > /dev/null
}

function main() {
  setup_env
  deploy_boshlite
  upload_stemcell
  upload_dependencies
  create_and_upload_release
  deploy_manifests
}

trap destroy_boshlite EXIT

main
