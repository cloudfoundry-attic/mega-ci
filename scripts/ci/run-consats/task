#!/bin/bash -exu

set +ux
source ~/.bashrc
source private-credentials/mega-ci/bosh_environment
set -ux

function main() {
  bosh target "${BOSH_DIRECTOR}"

  generate_manifest

  pushd consul-release > /dev/null
    bosh -n create release
    bosh upload release --rebase

    bosh upload release \
      "https://bosh.io/d/github.com/cppforlife/turbulence-release?v=0.4"

    bosh upload release \
      "http://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=39"

    bosh deployment aws/consats.yml
    bosh -n deploy

    bosh run errand acceptance-tests
  popd > /dev/null

  cleanup_deployment "consul"
  cleanup_deployment "turbulence-consul"

  bosh -n cleanup --all
}

function generate_manifest() {
  pushd consul-release > /dev/null
    mkdir -p manifest-generation/aws-stubs/

    cp \
      private-credentials/mega-ci/stubs/consats/iaas-settings-consats.yml \
      manifest-generation/aws-stubs/

    ./scripts/generate-consats-manifest aws
  popd > /dev/null
}

function cleanup_deployment() {
  local deployment
  deployment="${1}-[A-Za-z0-9]\{8\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{12\}"

  for i in $(bosh deployments | grep -o "${deployment}" | uniq); do
    bosh -n delete deployment $i
  done

  test -z "$(bosh deployments | grep "${deployment}")"
}

function teardown() {
  set +e
  bosh -n delete deployment consats

  bosh -n delete release turbulence
  bosh -n delete release bosh-aws-cpi
  bosh -n delete release consul
  set -e
}

trap teardown EXIT

main
