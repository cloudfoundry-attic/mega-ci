#!/bin/bash -exu

export ROOT="${PWD}"
consul_release_version="99999+dev.$(date +%s)"
turbulence_release_version="0.4"
bosh_aws_cpi_release_version="44"

set +ux
source ~/.bashrc
source private-credentials/bosh_environment
set -ux

function main() {
  bosh target "${BOSH_DIRECTOR}"

  pushd "${ROOT}/stemcell" > /dev/null
    bosh -t "${BOSH_DIRECTOR}" upload stemcell stemcell.tgz --skip-if-exists
  popd > /dev/null

  generate_manifest

  pushd "${ROOT}/consul-release" > /dev/null
    bosh -n create release --force --version "${consul_release_version}"
    bosh upload release

    bosh upload release \
      "https://bosh.io/d/github.com/cppforlife/turbulence-release?v=${turbulence_release_version}"

    bosh upload release \
      "http://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=${bosh_aws_cpi_release_version}"

    force_compilation

    bosh deployment aws/consats.yml
    bosh -n deploy

    bosh run errand acceptance-tests
  popd > /dev/null

  cleanup_deployment "consul"
  cleanup_deployment "turbulence-consul"

  bosh -n cleanup --all
}

function force_compilation() {
  local stemcell_version
  stemcell_version=$(cat ${ROOT}/stemcell/version)

  pushd /tmp > /dev/null
	sed "s/REPLACE_ME_DIRECTOR_UUID/$(bosh status --uuid)/g" "${ROOT}/mega-ci/scripts/ci/run-consats/fixtures/consul_compilation.yml" > "consul_compilation.yml"

    bosh -t "${BOSH_DIRECTOR}" -d "consul_compilation.yml" -n deploy
    bosh -t "${BOSH_DIRECTOR}" -d "consul_compilation.yml" export release "consul/${consul_release_version}" "ubuntu-trusty/${stemcell_version}"
    bosh -t "${BOSH_DIRECTOR}" -d "consul_compilation.yml" export release "turbulence/${turbulence_release_version}" "ubuntu-trusty/${stemcell_version}"
    bosh -t "${BOSH_DIRECTOR}" -d "consul_compilation.yml" export release "bosh-aws-cpi/${bosh_aws_cpi_release_version}" "ubuntu-trusty/${stemcell_version}"
    bosh -t "${BOSH_DIRECTOR}" -d "consul_compilation.yml" -n delete deployment compilation
  popd > /dev/null
}

function generate_manifest() {
  mkdir -p "${ROOT}/consul-release/aws"
  mkdir -p "${GOPATH}/src/github.com/cloudfoundry"

  pushd "${GOPATH}/src/github.com/cloudfoundry" > /dev/null
    ln -s "${ROOT}/mega-ci"

    pushd "${GOPATH}/src/github.com/cloudfoundry/mega-ci" > /dev/null
      GO15VENDOREXPERIMENT=1 go run \
        "./scripts/ci/run-consats/generate_manifest.go" \
        "${ROOT}/consul-release/manifests/aws/consats.yml" \
        > "${ROOT}/consul-release/aws/consats.yml"
    popd > /dev/null
  popd > /dev/null
}

function cleanup_deployment() {
  local deployment
  deployment="${1}-[A-Za-z0-9]\{8\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{4\}-[A-Za-z0-9]\{12\}"

  for i in $(bosh deployments | grep -o "${deployment}" | uniq); do
    bosh -n delete deployment $i
  done

  test -z "$(bosh deployments | grep "${deployment}")"
}

function teardown() {
  set +e
  bosh -n delete deployment consats

  bosh -n delete release turbulence
  bosh -n delete release bosh-aws-cpi
  bosh -n delete release consul
  set -e
}

trap teardown EXIT

main
