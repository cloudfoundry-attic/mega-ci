#!/bin/bash -exu

ROOT="${PWD}"
BOSH_DIRECTOR_UUID="$(bosh -t "${BOSH_DIRECTOR}" status --uuid)"
BOSH_VERSION="$(cat ${ROOT}/bosh/version)"
STEMCELL_VERSION="$(cat ${ROOT}/stemcell/version)"

function deploy_compilation_manifest() {
  sed -e "s/REPLACE_ME_DIRECTOR_UUID/${BOSH_DIRECTOR_UUID}/g" \
    -e "s/BOSH_VERSION/${BOSH_VERSION}/g" \
    -e "s/STEMCELL_VERSION/${STEMCELL_VERSION}/g" \
    "${ROOT}/mega-ci/scripts/ci/bosh-bootloader/build-compiled-bosh-release/bbl_compilation.yml" \
    > "${ROOT}/bbl_compilation.yml"

  bosh -t "${BOSH_DIRECTOR}" -d "${ROOT}/bbl_compilation.yml" -n deploy
}

function upload_bosh_release() {
  pushd "${ROOT}/bosh" > /dev/null
    bosh -t "${BOSH_DIRECTOR}" upload release release.tgz --skip-if-exists
  popd > /dev/null
}

function upload_stemcell() {
  pushd "${ROOT}/stemcell" > /dev/null
    bosh -t "${BOSH_DIRECTOR}" upload stemcell stemcell.tgz --skip-if-exists
  popd > /dev/null
}

function export_bosh_release() {
  mkdir -p "${ROOT}/bbl-compiled-bosh-release-s3"
  pushd "${ROOT}/bbl-compiled-bosh-release-s3" > /dev/null
    bosh -t "${BOSH_DIRECTOR}" -d "${ROOT}/bbl_compilation.yml" export release "bosh/${BOSH_VERSION}" "ubuntu-trusty/${STEMCELL_VERSION}"
  popd > /dev/null
}

function main() {
  upload_bosh_release
  upload_stemcell

  deploy_compilation_manifest

  export_bosh_release
}

function teardown() {
  set +e
  bosh -t "${BOSH_DIRECTOR}" -n delete deployment bbl_compilation
  bosh -t "${BOSH_DIRECTOR}" -n delete release bosh
  set -e
}

trap teardown EXIT

main
