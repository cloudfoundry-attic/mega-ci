#/bin/bash
set -e
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/generate_random_string"


function generate_json_web_token_keys()
{
  local _outvar1=$1
  local _outvar2=$2
  local _signing_key_location
  local _verification_key_location
  local _signing_key
  local _verification_key

  _signing_key_location=$(mktemp /tmp/privXXXXXX)
  _verification_key_location=$(mktemp /tmp/pubXXXXXX)

  openssl genrsa -out $_signing_key_location 2048 
  openssl rsa -in $_signing_key_location -pubout > $_verification_key_location

  _signing_key=$(sed -e 's/^/        /' $_signing_key_location)
  rm $_signing_key_location
  _verification_key=$(sed -e 's/^/        /' $_verification_key_location)
  rm $_verification_key_location

  eval $_outvar1=\$_signing_key
  eval $_outvar2=\$_verification_key
}

cloud_controller_admin_password=$(generate_random_string)

generate_json_web_token_keys signing_key verification_key

cat << EOM
properties:
  acceptance_tests:
    admin_password: ${cloud_controller_admin_password}
  cc:
    staging_upload_user: $(generate_random_string)
    bulk_api_password: $(generate_random_string)
    staging_upload_password: $(generate_random_string)
    db_encryption_key: $(generate_random_string)
  loggregator_endpoint:
    shared_secret: $(generate_random_string)
  nats:
    password: $(generate_random_string)
  router:
    status:
      password: $(generate_random_string)
    route_service_secret: $(generate_random_string)
  smoke_tests:
    password: ${cloud_controller_admin_password}
  uaa:
    admin:
      client_secret: $(generate_random_string)
    batch:
      username: $(generate_random_string)
      password: $(generate_random_string)
    cc:
      client_secret: $(generate_random_string)
    clients:
      cloud_controller_username_lookup:
        secret: $(generate_random_string)
      doppler:
        secret: $(generate_random_string)
      gorouter:
        secret: $(generate_random_string)
      login:
        secret: $(generate_random_string)
      notifications:
        secret: $(generate_random_string)
    jwt:
      signing_key: |
${signing_key}
      verification_key: |
${verification_key}
    scim:
      users: 
      - "admin|${cloud_controller_admin_password}|scim.write,scim.read,openid,cloud_controller.admin,doppler.firehose"
EOM
